//Welcome to java

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Print output to STDOUT. Your class should be named Solution. */
        System.out.println("Hello, World.");
        System.out.println("Hello, Java.");
    }
}

//Java standin and standout1

import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);

        int a = scan.nextInt();
        int b =scan.nextInt();
        int c =scan.nextInt();

        System.out.println(a);
        System.out.println(b);
        System.out.println(c);
        
    }
}

//java if-else

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {
    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        int N = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");
        
         
        
        if(N%2==0 && N>2 && N<5)
        {
            System.out.println("Not Weird");
        }
        
        else if(N%2==0 && N>6 && N<20)
        {
            System.out.println("Weird");
        }
        else if(N%2==0 && N>20)
        {
            System.out.println("Not Weird");
        }
        else
        {
            System.out.println("Weird");
        }
        scanner.close();
    }
}

//Java standin and standout2

import java.util.Scanner;

public class Solution {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int i = scan.nextInt();
        double d = scan.nextDouble();
        scan.nextLine();
        String s = scan.nextLine();
        scan.close();
        // Write your code here.
        
        
        
        System.out.println("String: " + s);
        System.out.println("Double: " + d);
        System.out.println("Int: " + i);
    }
}

//java output formatting
import java.util.Scanner;

public class Solution {

    public static void main(String[] args) {
            Scanner sc=new Scanner(System.in);
            System.out.println("================================");
            for(int i=0;i<3;i++){
                String s1=sc.next();
                int x=sc.nextInt();
                //Complete this line
                System.out.format("%-15s%03d%n", s1, x);
                
            }
            System.out.println("================================");
            
}
}


//java loops1
import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;



public class Solution {
    public static void main(String[] args) {
    Scanner sc =new Scanner(System.in);    
    int n = sc.nextInt();
    for(int i=1; i<=10;i++)
    {
        System.out.format("%d x %d = %d%n",n,i,n*i);
    }
    }
}

//java loops2

import java.util.*;
import java.io.*;

class Solution{
    public static void main(String []argh){
        Scanner in = new Scanner(System.in);
        int t=in.nextInt();
        for(int i=0;i<t;i++){
            int a = in.nextInt();
            int b = in.nextInt();
            int n = in.nextInt();
            
        
        for(int j=0;j<n;j++)
        {
            a += Math.pow(2,j)*b;
            System.out.printf("%s ", a);
        }
        System.out.println();
        }
        in.close();
    }
}



//java datatypes
import java.util.*;
import java.io.*;

class Solution{
    public static void main(String []argh)
    {
        Scanner sc = new Scanner(System.in);
        int t=sc.nextInt();

        for(int i=0;i<t;i++)
        {
            try
            {
                long x=sc.nextLong();
                System.out.println(x+" can be fitted in:");
                if(x>=Byte.MIN_VALUE && x<=Byte.MAX_VALUE)
                {
                    System.out.println("* byte");
                }
                if(x>=(Short.MIN_VALUE) && x<=Short.MAX_VALUE)
                {
                    System.out.println("* short");
                }
                if(x>=(Integer.MIN_VALUE) && x<=Integer.MAX_VALUE)
                {
                    System.out.println("* int");
                }
                if(x>=(Long.MIN_VALUE) && x<=Long.MAX_VALUE)
                {
                    System.out.println("* long");
                }
            }
            catch(Exception e)
            {
                System.out.println(sc.next()+" can't be fitted anywhere.");
            }

        }
    }
}

//java static intializer block
static int B,H;
  static boolean flag;
  static{
      Scanner sc = new Scanner(System.in);
      B = sc.nextInt();
      H = sc.nextInt();
    
    if(B <= 0 || H <= 0){
        System.out.println("java.lang.Exception: Breadth and height must be positive");
        flag = false;
      }
      else{
          flag = true;
      }
    }

  
//java int to string
//Write your code here
   String s = Integer.toString(n);

//java date and time

public static String findDay(int month, int day, int year) {
         Calendar cal = Calendar.getInstance();
        cal.set(Calendar.MONTH,month-1);
        cal.set(Calendar.DAY_OF_MONTH,day);
        cal.set(Calendar.YEAR,year);
String dayOfWeek = cal.getDisplayName(Calendar.DAY_OF_WEEK, Calendar.LONG, Locale.US).toUpperCase();
        return dayOfWeek;
        
    }
}


//java currency formatter

public class Solution {
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double payment = scanner.nextDouble();
        scanner.close();
        
        // Write your code here.
        Locale indiaLocale = new Locale("en","IN");
        
        NumberFormat us = NumberFormat.getCurrencyInstance(Locale.US);
        NumberFormat india = NumberFormat.getCurrencyInstance(indiaLocale);
        NumberFormat china = NumberFormat.getCurrencyInstance(Locale.CHINA);
        NumberFormat france = NumberFormat.getCurrencyInstance(Locale.FRANCE);
        
        System.out.println("US: " + us.format(payment));
        System.out.println("India: " + india.format(payment));
        System.out.println("China: " + china.format(payment));
        System.out.println("France: " + france.format(payment));
    }
}


//java strings introduction

public class Solution {

    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);
        String A=sc.next();
        String B=sc.next();
        /* Enter your code here. Print output to STDOUT. */
        System.out.println(A.length()+B.length());
        
        System.out.println(A.compareTo(B)>0?"Yes":"No");
        
        System.out.println(A.substring(0,1).toUpperCase()+A.substring(1,A.length())+" "+B.substring(0,1).toUpperCase()+B.substring(1,B.length()));
        
    }
}


//java substring

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String S = in.next();
        int start = in.nextInt();
        int end = in.nextInt();
        System.out.println(S.substring(start,end));
    }
}

//java substring comparision

//java string reverse

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);
        String str = sc.next();
        /* Enter your code here. Print output to STDOUT. */
        String reversestr = "";

  int strLength = str.length();

  for(int i = (strLength - 1);i>=0;--i){
   reversestr = reversestr + str.charAt(i);
  }

  if (str.toLowerCase().equals(reversestr.toLowerCase())) {
   System.out.println("Yes");
  }
  else{
   System.out.println("No");
  }
 }
}




//java anangrams

static boolean isAnagram(String a, String b) {

        // Complete the function
        if(a.length() != b.length()){
            return false;
        }
        else{
            a = a.replace(" ","").toLowerCase();
            b = b.replace(" ","").toLowerCase();
            
            char[] achar = a.toCharArray();
            char[] bchar = b.toCharArray();
            
            java.util.Arrays.sort(achar);//to import arrays 
            java.util.Arrays.sort(bchar);
            
            if(java.util.Arrays.equals(achar,bchar)){
                return true;
            }
            else{
                return false;
            }
        }
    
    }


//java string tokens

public class Solution {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        String s = scan.nextLine();
        scan.close();
        
        // Write your code here.
        s = s.trim();
        if(s.length() == 0){
            System.out.println(0);
            return;
        }
        
        String[] words = s.split("[^a-zA-Z]+");
        System.out.println(words.length);
        for(String str : words){
            System.out.println(str);
        }
    }
}

//pattern syntax checker

import java.util.Scanner;
import java.util.regex.*;

public class Solution
{
	public static void main(String[] args){
		Scanner in = new Scanner(System.in);
		int testCases = Integer.parseInt(in.nextLine());
		while(testCases>0){
			String pattern = in.nextLine();

          	//Write your code
              try{
                  Pattern.compile(pattern);
                  System.out.println("Valid");
              }
              catch(Exception e){
                  System.out.println("Invalid");
              }
              testCases--;
              
		}
        in.close();
	}
}


//java regex (need to work better on the topic regex) 

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Scanner;

class Solution{

    public static void main(String[] args){
        Scanner in = new Scanner(System.in);
        while(in.hasNext()){
            String IP = in.next();
            System.out.println(IP.matches(new MyRegex().pattern));
        }

    }
}

//Write your code here

/*
 [01]?\\d{1,2} - matches numbers 0 - 199
 2[0-4]\\d     - matches numbers 200 - 249
 25[0-5]       - matches numbers 250 - 255
*/

class MyRegex{
     String zeroTo255 = "([01]?\\d{1,2}|2[0-4]\\d|25[0-5])";
     String pattern = zeroTo255 + "." + zeroTo255 + "." + zeroTo255 + "." + zeroTo255;
}


//java regex2 - duplicate words

For example, 
The words love and to are repeated in the sentence I love Love to To tO code. Can you complete the code in the editor so it will turn 
I love Love to To tO code into I love to code?


public class DuplicateWords {

    public static void main(String[] args) {

        String regex = "\\b(\\w+)(\\b\\W+\\b\\1\\b)*";//regex 
        Pattern p = Pattern.compile(regex, Pattern.CASE_INSENSITIVE);//Pattern.CASE_INSENSITIVE 

        Scanner in = new Scanner(System.in);
        int numSentences = Integer.parseInt(in.nextLine());
        
        while (numSentences-- > 0) {
            String input = in.nextLine();
            
            Matcher m = p.matcher(input);
            
            // Check for subsequences of input that match the compiled pattern
            while (m.find()) {
                input = input.replaceAll(m.group(), m.group(1));
            }
            
            // Prints the modified sentence.
            System.out.println(input);
        }
        
        in.close();
    }

//valid username regular expression

 [a-zA-Z]\w[7-29]

//Tag content extractor

4
<h1>Nayeem loves counseling</h1>
<h1><h1>Sanjay has no watch</h1></h1><par>So wait for a while</par>
<Amee>safat codes like a ninja</amee>
<SA premium>Imtiaz has a secret crush</SA premium>

o/p:
Nayeem loves counseling
Sanjay has no watch
So wait for a while
None
Imtiaz has a secret crush

    Scanner in = new Scanner(System.in);
    int testCases = Integer.parseInt(in.nextLine());
	while(testCases>0){
	    String line = in.nextLine();
            boolean matchfound = false;

          //Write your code here

            String regex = "<(.+)>([^<>]+)(</\\1>)";
	    Pattern pattern = Pattern.compile(regex);
            Matcher matcher = pattern.matcher(line);

            while(matcher.find()){
                System.out.println(matcher.group(2));
                matchfound = true;
            }

            if(!matchfound){
                System.out.println("None");
            }
	     testCases--;
	  }


//Java bigdecimal

 //Write your code here
         Comparator<String> comp = new Comparator<String>(){
             
             public int compare(String s1,String s2){
                 
                 BigDecimal b1 = new BigDecimal(s1);
                 BigDecimal b2 = new BigDecimal(s2);
                 return b2.compareTo(b1);
                 
             }
         };
             Arrays.sort(s,0,n,comp);


//Java primality test

public class Solution {
    public static void main(String[] args) throws IOException {
        Scanner sc = new Scanner(System.in);
        BigInteger n = sc.nextBigInteger();
        sc.close();
// isProbablePrime()- method is used to tell if this BigInteger is probably prime or if it’s definitely composite
        System.out.println(n.isProbablePrime(10)?"prime":"Not prime");
    }
}


//Java BigInteger

I/p:
1234
20

O/P:
1254
24680


 public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner sc = new Scanner(System.in);
        BigInteger b1 = new BigInteger(sc.next());
        BigInteger b2 = new BigInteger(sc.next());
        
        System.out.println(b1.add(b2));
        System.out.println(b1.multiply(b2));
    }
}

//Java 1D Array

 public static void main(String[] args) {
	   
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();
        int a[] = new int[n];
        for(int i=0;i<n;i++){
            int value = scan.nextInt();
            a[i] = value;
        }
        scan.close();

        // Prints each sequential element in array a
        for (int i = 0; i < a.length; i++) {
            System.out.println(a[i]);
        }
    }
}

//Java 2D Array - Hour glass

public static void main(String[] args) throws IOException {
  Scanner in = new Scanner(System.in);
        int arr[][] = new int[6][6];
        for (int i = 0; i < 6; i++) {
            for (int j = 0; j < 6; j++) {
                arr[i][j] = in.nextInt();
            }
        }
        
        int maxSum = Integer.MIN_VALUE;
        for(int row = 0; row<4; row++){
            for(int col = 0; col < 4; col++){
                int sum = arr[row][col]+arr[row][col+1]+arr[row][col+2]+
                                        arr[row+1][col+1]+
                          arr[row+2][col]+arr[row+2][col+1]+arr[row+2][col+2];
                
                if(sum > maxSum){
                    maxSum = sum;
                }
            }
        }
         System.out.println(maxSum);
         in.close();
    }
}

//Java subArray - {1,2,3,4} - {1},{1,2},{1,2,3},{1,2,3,4},{2},{2,3},{2,3,4},{3},{3,4},{4}

Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int arr[] = new int[n];
        for(int i =0;i<n;i++){
            arr[i] = sc.nextInt();
        }
        int negativeArray = 0;
        for(int i =0;i<n;i++){
            for(int j=i;j<n;j++){
                int sumArray = 0;
                for(int k =i;k<=j;k++){
                    sumArray += arr[k];
                    System.out.println(sumArray);
                } 
            }
        }
        

public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int arr[] = new int[n];
        for(int i =0;i<n;i++){
            arr[i] = sc.nextInt();
        }
        int negativeArray = 0;
        for(int i =0;i<n;i++){
            for(int j=i;j<n;j++){
                int sumArray = 0;
                for(int k =i;k<=j;k++){
                    sumArray += arr[k];
                }
                if(sumArray < 0){
                    negativeArray++;
                }
            }
        }
        System.out.println(negativeArray);
    }


//Java Arraylist

public static void main(String[] args) {
  Scanner sc = new Scanner(System.in);

  ArrayList alist[] = new ArrayList[20000];//20000 given constraint

  int list = sc.nextInt();
  for(int i =0;i<list;i++){
   alist[i] = new ArrayList();
   int number = sc.nextInt();

   for(int j=0;j<number;j++){
    int value = sc.nextInt();
    //adding value to alist[i]
    alist[i].add(value);
   }
  }

  int queries = sc.nextInt();
  for(int i =0;i<queries;i++){
   int x = sc.nextInt();
   int y = sc.nextInt();

   try{
    //x-1,y-1 because the ds started from 1(in the fig) but in java the ds starts from 0.
    System.out.println(alist[x-1].get(y-1));
   }
   catch(Exception e){
    System.out.println("ERROR!");
  }
 }
}

//Java 1D Array (part 2)

public class Solution {

    public static boolean canWin(int leap, int[] game, int index) {
        // Return true if you can win the game; otherwise, return false.
        if(index < 0 || game[index] == 1){
            return false;
        }
        
        if(index + 1 > game.length - 1 ||index + leap > game.length - 1 ){
            return true;                
        }
        game[index] = 1;
        return canWin(leap,game,index - 1)||canWin(leap,game,index + 1)
        ||canWin(leap,game,index + leap);
    }

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int q = scan.nextInt();
        while (q -- > 0) {
            int n = scan.nextInt();
            int leap = scan.nextInt();
            
            int[] game = new int[n];
            for (int i = 0; i < n; i++) {
                game[i] = scan.nextInt();
            }

            System.out.println( (canWin(leap, game, 0)) ? "YES" : "NO" );
        }
        scan.close();
    }
}

//Java List

  public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        List<Integer> list = new ArrayList<Integer>();
            for(int i=0;i<n;i++){
            list.add(sc.nextInt());
            }
        
        int q = sc.nextInt();
        for(int j=0;j<q;j++){
            String command = sc.next();
            if(command.equals("Insert")){
                int x = sc.nextInt();
                int y = sc.nextInt();
                
                list.add(x,y);
            }
            if(command.equals("Delete")){
                int x = sc.nextInt();
                list.remove(x);
            }
        } 
        for(int w : list){
            System.out.print(w+" ");
        }
}


//Java map

public static void main(String []argh){
    Scanner in = new Scanner(System.in);
    int n=in.nextInt();
    in.nextLine();
    Map<String,Integer>hmap = new HashMap<String,Integer>();
    for(int i=0;i<n;i++){
        String name=in.nextLine();
        int phone=in.nextInt();
        hmap.put(name,phone);
	in.nextLine();
       }
         while(in.hasNext()){
	     String s=in.nextLine();
             if(hmap.containsKey(s)){
             System.out.println(s+"="+hmap.get(s));
            }
             else{
                  System.out.println("Not found");
                 }
	       }
        in.close();
}


//Java stack

class solution{
	public static void main(String []argh)
	{
		Scanner sc = new Scanner(System.in);
		
		while (sc.hasNext()) {
			String s=sc.next();
            //Complete the code
            System.out.println(valid(s));
		}
		sc.close();
	}
    
    public static boolean valid(String s){
        Stack<Character> stack = new Stack<Character>();
        
        for(int i=0;i<s.length();i++){
            if(s.charAt(i) == '(' || s.charAt(i) == '{' || s.charAt(i) == '['){
                stack.push(s.charAt(i));
            }
            else {
                if(stack.isEmpty()){
                return false;
            }
            
            else{
                char pop_value = stack.pop();
                if(s.charAt(i) == ']' && pop_value != '['){
                    return false;
                }
                else if(s.charAt(i) == '}' && pop_value != '{'){
                    return false;
                }
                else if(s.charAt(i) == ')' && pop_value != '('){
                    return false;
                }
            }
            }
        }
        if(stack.isEmpty()){
            return true;
        }
        else return false;
        
    }
}

//Java Hashset


//Java Generics


//Java comparator


//Java sort



//Java Deque



//Java Bitset



//Java priority queue



//Java inheritance 1

class Animal{
	void walk(){
		System.out.println("I am walking");
	}
}

class Bird extends Animal{
	void fly(){
		System.out.println("I am flying");
	}
    void sing(){
        System.out.println("I am singing");
    }
}

public class Solution{

   public static void main(String args[]){

	  Bird bird = new Bird();
	  bird.walk();
	  bird.fly();
      bird.sing();
	
   }
}

//Java inheritance 2

//Write your code here
class Arithmetic{
    int add(int a ,int b){
        return a + b;
    }
}

class Adder extends Arithmetic{
    
}

public class Solution{
    public static void main(String []args){
        // Create a new Adder object
        Adder a = new Adder();
        
        // Print the name of the superclass on a new line
        System.out.println("My superclass is: " + a.getClass().getSuperclass().getName());	
        
        // Print the result of 3 calls to Adder's `add(int,int)` method as 3 space-separated integers:
        System.out.print(a.add(10,32) + " " + a.add(10,3) + " " + a.add(10,10) + "\n");
     }
}

//Java abstract class

abstract class book{
    String title;
    abstract void setTitle(String s);
    String getTitle(){
        return title;
    }
};

//Write MyBook class here
class MyBook extends book{
    void setTitle(String s){
        super.title = s;
    }
}
public class Main{
	
	public static void main(String []args){
		//Book new_novel=new Book(); This line prHMain.java:25: error: Book is abstract; cannot be instantiated
		Scanner sc=new Scanner(System.in);
		String title=sc.nextLine();
		MyBook new_novel=new MyBook();
		new_novel.setTitle(title);
		System.out.println("The title is: "+new_novel.getTitle());
      	sc.close();
		
	}
}

//Java Interface



//Java Method Overriding

class Sports{

    String getName(){
        return "Generic Sports";
    }
  
    void getNumberOfTeamMembers(){
        System.out.println( "Each team has n players in " + getName() );
    }
}

class Soccer extends Sports{
    @Override
    String getName(){
        return "Soccer Class";
    }

    // Write your overridden getNumberOfTeamMembers method here
    void getNumberOfTeamMembers(){
        System.out.println("Each team has 11 players in Soccer Class");
    }
}

public class Solution{
	
    public static void main(String []args){
        Sports c1 = new Sports();
        Soccer c2 = new Soccer();
        System.out.println(c1.getName());
        c1.getNumberOfTeamMembers();
        System.out.println(c2.getName());
        c2.getNumberOfTeamMembers();
	}
}

//Java Method Overriding 2



//Java Instanceof 

class Student{}
class Rockstar{}
class Hacker{}


public class InstanceOFTutorial{
	
   static String count(ArrayList mylist){
      int a = 0,b = 0,c = 0;
      for(int i = 0; i < mylist.size(); i++){
         Object element=mylist.get(i);
         if(element instanceof Student)
            a++;
         if(element instanceof Rockstar)
            b++;
         if(element instanceof Hacker)
            c++;
      }
      String ret = Integer.toString(a)+" "+ Integer.toString(b)+" "+ Integer.toString(c);
      return ret;
   }

   public static void main(String []args){
      ArrayList mylist = new ArrayList();
      Scanner sc = new Scanner(System.in);
      int t = sc.nextInt();
      for(int i=0; i<t; i++){
         String s=sc.next();
         if(s.equals("Student"))mylist.add(new Student());
         if(s.equals("Rockstar"))mylist.add(new Rockstar());
         if(s.equals("Hacker"))mylist.add(new Hacker());
      }
      System.out.println(count(mylist));
   }
}


//Java Iterator

public class Main{
	
   static Iterator func(ArrayList mylist){
      Iterator it=mylist.iterator();
      while(it.hasNext()){
         Object element = it.next();
         if(element instanceof String)//Hints: use instanceof operator
			break;
		}
      return it;
      
   }
   @SuppressWarnings({ "unchecked" })
   public static void main(String []args){
      ArrayList mylist = new ArrayList();
      Scanner sc = new Scanner(System.in);
      int n = sc.nextInt();
      int m = sc.nextInt();
      for(int i = 0;i<n;i++){
         mylist.add(sc.nextInt());
      }
      
      mylist.add("###");
      for(int i=0;i<m;i++){
         mylist.add(sc.next());
      }
      
      Iterator it=func(mylist);
      while(it.hasNext()){
         Object element = it.next();
         System.out.println((String)element);
      }
   }
}


//Java Exception handling -1 (try catch)

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner sc = new Scanner(System.in);
        
        try{
            int x = sc.nextInt();
            int y = sc.nextInt();
            int z = x/y;
            
            System.out.println(z);
        }
        catch(InputMismatchException e){
            System.out.println(e.getClass().getName());//to avoid the stacktrace()
        }
        catch(ArithmeticException e){
            System.out.println(e);
        }
        finally{
            sc.close();
        }
    }
}


//Java Exception handling -2

class MyCalculator {

    /*
    * Create the method long power(int, int) here.
    */

    long power(int n,int p ) throws Exception{
        if(n<0 || p<0){
            throw new Exception("n or p should not be negative.");
        }
        else if(n==0 && p ==0){
            throw new Exception("n and p should not be zero.");
        }
        else{
            return (int)Math.pow(n,p);
        }
    }
    
}